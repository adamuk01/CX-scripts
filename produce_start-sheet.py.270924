#!/usr/bin/python3

# This will scan the CSV file and allocate a race number to non-league riders, starting at 889
# Give this the input file from riderHQ and an output file - allRiders.csv

import csv

def validate_and_allocate_membership(csv_file):
    updated_data = []
    membership_number = 889  # Starting non-membership number - i.e non league members

    with open(csv_file, 'r', newline='') as file:
        reader = csv.reader(file)
        header = next(reader)  # Read the header row
        updated_data.append(header)  # Add header to updated data

        membership_number_index = header.index("Membership number")  # Get index of Membership number field

        for line_num, row in enumerate(reader, start=2):  # Start from line 2
            if not row[membership_number_index]:  # If Membership number is empty
                row[membership_number_index] = str(membership_number)  # Allocate membership number
                membership_number += 1  # Increment membership number for next row
            updated_data.append(row)  # Add row to updated data

    return updated_data

def write_to_csv(data, output_file):
    with open(output_file, 'w', newline='') as file:
        writer = csv.writer(file)
        writer.writerows(data)

if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description="Validate CSV file, allocate membership numbers, and output to a new CSV file")
    parser.add_argument("csv_file", help="Path to the input CSV file")
    parser.add_argument("output_file", help="Path to the output CSV file")
    args = parser.parse_args()

    updated_data = validate_and_allocate_membership(args.csv_file)
    write_to_csv(updated_data, args.output_file)

    print("CSV file validation and membership allocation completed. Updated data saved to:", args.output_file)

